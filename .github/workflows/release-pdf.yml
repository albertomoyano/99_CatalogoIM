name: Generar y Publicar Catálogo

on:
  push:
    paths:
      - '**/*.pdf'
    branches:
      - main
  workflow_dispatch:

jobs:
  procesar-y-publicar:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    # Paso 1: Obtener el código
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Paso 2: Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    # Paso 3: Instalar dependencias
    - name: Install dependencies
      run: pip install PyPDF2
      
    # Paso 4: Ejecutar script desde su ubicación correcta
    - name: Combinar PDFs
      id: combine
      run: |
        echo "Ejecutando script desde ./github/scripts/combine_pdfs.py"
        python ./github/scripts/combine_pdfs.py
        
        # Verificar que el PDF se generó
        if [ ! -f "docs/catalogo_ediciones_imago_mundi.pdf" ]; then
          echo "::error::El PDF no se generó en la ubicación esperada"
          exit 1
        fi
        
        echo "PDF_PATH=docs/catalogo_ediciones_imago_mundi.pdf" >> $GITHUB_ENV
        echo "PDF_SIZE=$(du -h docs/catalogo_ediciones_imago_mundi.pdf | cut -f1)" >> $GITHUB_ENV
      
    # Paso 5: Esperar estabilización
    - name: Esperar estabilización del archivo
      run: sleep 5
      
    # Paso 6: Crear Release
    - name: Crear Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: "Catálogo Ediciones Imago Mundi - $(date +'%d-%m-%Y')"
        body: |
          📅 Generado automáticamente el $(date +'%d/%m/%Y a las %H:%M')
          📄 Tamaño del archivo: ${{ env.PDF_SIZE }}
          
          Contiene todos los documentos combinados en orden cronológico.
        tag_name: "release-$(date +'%Y%m%d-%H%M')"
        files: ${{ env.PDF_PATH }}
        draft: false
        prerelease: false